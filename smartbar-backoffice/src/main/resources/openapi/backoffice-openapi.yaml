openapi: 3.1.0
info:
  title: Smarbar Backoffice AP
  description: Smarbar Backoffice AP
  version: 1.0.0
paths:
  /categories:
    get:
      tags:
        - Categories
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type:
                  - array
                items:
                  $ref: "#/components/schemas/apiCategory"
    post:
      tags:
        - Categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiCategory"
      responses:
        201:
          description: Success
          $ref: "#/components/responses/201"
  /categories/{categoryId}:
    parameters:
      - name: categoryId
        schema:
          $ref: "#/components/schemas/id"
        in: path
    put:
      tags:
        - Categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiCategory"
      responses:
        200:
          description: Entity successfully updated
    delete:
      tags:
        - Categories
      responses:
        200:
          description: Entity successfully deleted
    get:
      tags:
        - Categories
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiCategory"
  /articles:
    get:
      tags:
        - Articles
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/apiArticle"
    post:
      tags:
        - Articles
      parameters:
        - name: x-category-id
          in: header
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiArticle"
      responses:
        201:
          $ref: "#/components/responses/201"
  /articles/{articleId}:
    parameters:
      - name: articleId
        schema:
          $ref: "#/components/schemas/id"
        in: path
    put:
      tags:
        - Articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiArticle"
      responses:
        200:
          description: Entity successfully updated
    delete:
      tags:
        - Articles
      responses:
        200:
          description: Entity successfully deleted
    get:
      tags:
        - Articles
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiArticle"
  /tables:
    get:
      tags:
        - Tables
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/apiTable"
    post:
      tags:
        - Tables
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiTable"
      responses:
        201:
          $ref: "#/components/responses/201"
  /tables/{tableId}:
    parameters:
      - name: tableId
        schema:
          $ref: "#/components/schemas/id"
        in: path
    put:
      tags:
        - Tables
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiTable"
      responses:
        200:
          description: Entity successfully updated
    delete:
      tags:
        - Tables
      responses:
        200:
          description: Entity successfully deleted
    get:
      tags:
        - Tables
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiTable"
components:
  schemas:
    apiCategory:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
    apiArticle:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
        description:
          type: string
        picture:
          type: string
    apiTable:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string,
        seatCount:
          type: integer,
        active:
          type: boolean
    id:
      type: integer
      format: int64
  responses:
    201:
      description: Entity successfully created
      headers:
        Location:
          description: Entity successfully created